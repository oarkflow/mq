{
    "app": {
        "name": "SMS Workflow Application",
        "version": "1.0.0",
        "description": "Complete SMS workflow application built from JSON configuration",
        "port": "3000",
        "host": "localhost"
    },
    "data": {
        "app_title": "üöÄ SMS Workflow Pipeline",
        "demo_users": [
            { "username": "admin", "password": "password", "role": "admin" },
            { "username": "manager", "password": "password", "role": "manager" },
            { "username": "operator", "password": "password", "role": "operator" }
        ],
        "sms_providers": [
            {
                "id": "twilio",
                "name": "Twilio",
                "type": "premium",
                "countries": [ "US", "CA", "GB", "AU" ],
                "rates": { "US": 0.0075, "CA": 0.0085, "GB": 0.0090, "AU": 0.0095 },
                "max_length": 160,
                "features": [ "delivery_receipt", "unicode", "shortcode" ],
                "priority": 1,
                "reliability": 0.99
            },
            {
                "id": "nexmo",
                "name": "Vonage (Nexmo)",
                "type": "standard",
                "countries": [ "US", "CA", "GB", "AU", "DE", "FR", "IN" ],
                "rates": { "US": 0.0065, "CA": 0.0070, "GB": 0.0075, "AU": 0.0080, "DE": 0.0070, "FR": 0.0075, "IN": 0.0045 },
                "max_length": 160,
                "features": [ "delivery_receipt", "unicode" ],
                "priority": 2,
                "reliability": 0.97
            },
            {
                "id": "aws",
                "name": "AWS SNS",
                "type": "bulk",
                "countries": [ "US", "CA", "GB", "AU", "DE", "FR", "IN", "BR", "JP" ],
                "rates": { "US": 0.0055, "CA": 0.0060, "GB": 0.0065, "AU": 0.0070, "DE": 0.0060, "FR": 0.0065, "IN": 0.0035, "BR": 0.0080, "JP": 0.0090 },
                "max_length": 140,
                "features": [ "bulk_sending" ],
                "priority": 3,
                "reliability": 0.95
            }
        ],
        "countries": [
            { "code": "US", "name": "United States", "providers": [ "twilio", "nexmo", "aws" ], "default_rate": 0.0075 },
            { "code": "CA", "name": "Canada", "providers": [ "twilio", "nexmo", "aws" ], "default_rate": 0.0080 },
            { "code": "GB", "name": "United Kingdom", "providers": [ "twilio", "nexmo", "aws" ], "default_rate": 0.0085 },
            { "code": "AU", "name": "Australia", "providers": [ "twilio", "nexmo", "aws" ], "default_rate": 0.0090 },
            { "code": "DE", "name": "Germany", "providers": [ "nexmo", "aws" ], "default_rate": 0.0070 },
            { "code": "FR", "name": "France", "providers": [ "nexmo", "aws" ], "default_rate": 0.0075 },
            { "code": "IN", "name": "India", "providers": [ "nexmo", "aws" ], "default_rate": 0.0045 },
            { "code": "BR", "name": "Brazil", "providers": [ "aws" ], "default_rate": 0.0080 },
            { "code": "JP", "name": "Japan", "providers": [ "aws" ], "default_rate": 0.0090 }
        ]
    },
    "middleware": [
        {
            "id": "logging",
            "name": "Request Logging",
            "type": "logging",
            "priority": 1,
            "enabled": true,
            "config": { }
        },
        {
            "id": "auth",
            "name": "Authentication",
            "type": "auth",
            "priority": 2,
            "enabled": true,
            "config": {
                "skip_paths": [ "/", "/login", "/docs" ]
            }
        }
    ],
    "templates": {
        "login_page": {
            "id": "login_page",
            "name": "Login Page",
            "type": "html",
            "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{{.app_title}} - Login</title>\n    <style>\n        body { font-family: Arial, sans-serif; max-width: 500px; margin: 100px auto; padding: 20px; background: #f5f5f5; }\n        .login-container { padding: 40px; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); background: white; }\n        .form-group { margin-bottom: 20px; }\n        label { display: block; margin-bottom: 5px; font-weight: bold; }\n        input { width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; }\n        button { width: 100%; background: #007bff; color: white; padding: 12px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; }\n        button:hover { background: #0056b3; }\n        .error { background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; padding: 10px; border-radius: 4px; margin-top: 10px; }\n        .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; padding: 10px; border-radius: 4px; margin-top: 10px; }\n        .demo-users { background: #e3f2fd; padding: 15px; border-radius: 4px; margin-bottom: 20px; }\n    </style>\n</head>\n<body>\n    <div class=\"login-container\">\n        <h1>üîê SMS Workflow Login</h1>\n        <div class=\"demo-users\">\n            <h3>Demo Users:</h3>\n            {{range .demo_users}}\n            <p><strong>{{.username}}</strong> / {{.password}} ({{.role}})</p>\n            {{end}}\n        </div>\n        <form id=\"loginForm\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username:</label>\n                <input type=\"text\" id=\"username\" name=\"username\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\" id=\"password\" name=\"password\" required>\n            </div>\n            <button type=\"submit\">Login</button>\n        </form>\n        <div id=\"result\"></div>\n    </div>\n    <script>\n        document.getElementById('loginForm').addEventListener('submit', async function(e) {\n            e.preventDefault();\n            const username = document.getElementById('username').value;\n            const password = document.getElementById('password').value;\n            const resultDiv = document.getElementById('result');\n            try {\n                const response = await fetch('/auth/login', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ username, password })\n                });\n                const result = await response.json();\n                if (result.success) {\n                    resultDiv.innerHTML = '<div class=\"success\">‚úÖ Login successful! Redirecting...</div>';\n                    sessionStorage.setItem('authToken', result.token);\n                    sessionStorage.setItem('user', JSON.stringify(result.user));\n                    setTimeout(() => { window.location.href = '/sms'; }, 1000);\n                } else {\n                    resultDiv.innerHTML = '<div class=\"error\">‚ùå ' + result.error + '</div>';\n                }\n            } catch (error) {\n                resultDiv.innerHTML = '<div class=\"error\">‚ùå ' + error.message + '</div>';\n            }\n        });\n    </script>\n</body>\n</html>"
        },
        "sms_page": {
            "id": "sms_page",
            "name": "SMS Workflow Page",
            "type": "html",
            "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{{.app_title}}</title>\n    <style>\n        body { font-family: Arial, sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px; }\n        .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px; padding: 20px; background: #f8f9fa; border-radius: 8px; }\n        .user-info { font-size: 14px; color: #666; }\n        .logout-btn { background: #dc3545; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; }\n        .step { margin-bottom: 30px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }\n        .step.active { border-color: #007bff; background: #f8f9ff; }\n        .step.completed { border-color: #28a745; background: #f8fff8; }\n        .step.disabled { opacity: 0.5; pointer-events: none; }\n        .step-header { display: flex; align-items: center; margin-bottom: 15px; }\n        .step-number { background: #007bff; color: white; width: 30px; height: 30px; border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold; }\n        .step.completed .step-number { background: #28a745; }\n        .step.disabled .step-number { background: #6c757d; }\n        button { background: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; margin: 5px; }\n        button:disabled { background: #6c757d; cursor: not-allowed; }\n        button.next { background: #28a745; }\n        input, textarea, select { width: 100%; padding: 8px; margin: 5px 0; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; }\n        .form-group { margin-bottom: 15px; }\n        label { display: block; margin-bottom: 5px; font-weight: bold; }\n        .result { margin-top: 15px; padding: 10px; border-radius: 4px; }\n        .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; }\n        .error { background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; }\n        .info { background: #e3f2fd; border: 1px solid #bbdefb; color: #0c5460; }\n        .provider-option { display: flex; align-items: center; margin: 10px 0; padding: 15px; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n        .provider-option:hover { background: #f8f9fa; }\n        .provider-option.selected { border-color: #007bff; background: #f8f9ff; }\n        .waiting { display: none; padding: 20px; text-align: center; }\n        .spinner { border: 4px solid #f3f3f3; border-top: 4px solid #3498db; border-radius: 50%; width: 40px; height: 40px; animation: spin 2s linear infinite; margin: 0 auto 15px; }\n        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>{{.app_title}}</h1>\n        <div>\n            <span class=\"user-info\" id=\"userInfo\">Loading...</span>\n            <button class=\"logout-btn\" onclick=\"logout()\">Logout</button>\n        </div>\n    </div>\n\n    <!-- Step 1: SMS Message Input -->\n    <div class=\"step active\" id=\"step1\">\n        <div class=\"step-header\">\n            <div class=\"step-number\">1</div>\n            <h2>Enter SMS Details</h2>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"recipients\">Recipients (comma-separated phone numbers):</label>\n            <input type=\"text\" id=\"recipients\" placeholder=\"+1234567890,+0987654321\" value=\"+1234567890\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"message\">Message:</label>\n            <textarea id=\"message\" rows=\"4\" placeholder=\"Enter your SMS message here...\">Hello! This is a test SMS from the JSON-driven workflow engine.</textarea>\n        </div>\n        <button class=\"next\" onclick=\"nextStep(1)\">Next: Choose Provider</button>\n        <div id=\"step1-result\" class=\"result\" style=\"display: none;\"></div>\n    </div>\n\n    <!-- Step 2: Provider Selection -->\n    <div class=\"step disabled\" id=\"step2\">\n        <div class=\"step-header\">\n            <div class=\"step-number\">2</div>\n            <h2>Choose SMS Provider</h2>\n        </div>\n        <div id=\"providerOptions\">\n            {{range .sms_providers}}\n            <div class=\"provider-option\" onclick=\"selectProvider('{{.id}}')\"> \n                <div>\n                    <h3>{{.name}}</h3>\n                    <p>{{.description}} - {{.cost}}</p>\n                </div>\n            </div>\n            {{end}}\n        </div>\n        <button onclick=\"previousStep(2)\">Previous</button>\n        <button class=\"next\" onclick=\"nextStep(2)\" disabled id=\"step2-next\">Next: Send SMS</button>\n        <div id=\"step2-result\" class=\"result\" style=\"display: none;\"></div>\n    </div>\n\n    <!-- Step 3: Send SMS and Wait for Callback -->\n    <div class=\"step disabled\" id=\"step3\">\n        <div class=\"step-header\">\n            <div class=\"step-number\">3</div>\n            <h2>Send SMS & Wait for Delivery Status</h2>\n        </div>\n        <div id=\"smsPreview\">\n            <h3>üìã SMS Preview:</h3>\n            <div id=\"previewContent\" style=\"background: #f8f9fa; padding: 15px; border-radius: 4px; margin-bottom: 15px;\"></div>\n        </div>\n        <button onclick=\"previousStep(3)\">Previous</button>\n        <button class=\"next\" onclick=\"sendSMS()\" id=\"sendButton\">üöÄ Send SMS</button>\n\n        <div class=\"waiting\" id=\"waiting\">\n            <div class=\"spinner\"></div>\n            <h3>Sending SMS...</h3>\n            <p>Please wait while we process your SMS through the workflow pipeline</p>\n        </div>\n\n        <div id=\"step3-result\" class=\"result\" style=\"display: none;\"></div>\n    </div>\n\n    <script>\n        let currentStep = 1;\n        let selectedProvider = '';\n        let smsData = {};\n        let authToken = sessionStorage.getItem('authToken');\n        let user = JSON.parse(sessionStorage.getItem('user') || '{}');\n\n        window.onload = function() {\n            if (!authToken) {\n                window.location.href = '/login';\n                return;\n            }\n            document.getElementById('userInfo').textContent = 'Logged in as: ' + user.username + ' (' + user.role + ')';\n        };\n\n        function nextStep(step) {\n            if (step === 1) {\n                const recipients = document.getElementById('recipients').value;\n                const message = document.getElementById('message').value;\n                if (!recipients || !message) {\n                    showResult('step1-result', 'error', '‚ùå Please fill in all fields');\n                    return;\n                }\n                smsData.recipients = recipients;\n                smsData.message = message;\n                showResult('step1-result', 'success', '‚úÖ SMS details saved');\n                document.getElementById('step1').classList.remove('active');\n                document.getElementById('step1').classList.add('completed');\n                document.getElementById('step2').classList.remove('disabled');\n                document.getElementById('step2').classList.add('active');\n                currentStep = 2;\n            } else if (step === 2) {\n                if (!selectedProvider) {\n                    showResult('step2-result', 'error', '‚ùå Please select a provider');\n                    return;\n                }\n                smsData.provider = selectedProvider;\n                showResult('step2-result', 'success', '‚úÖ Provider selected: ' + selectedProvider);\n                document.getElementById('step2').classList.remove('active');\n                document.getElementById('step2').classList.add('completed');\n                document.getElementById('step3').classList.remove('disabled');\n                document.getElementById('step3').classList.add('active');\n                currentStep = 3;\n                updatePreview();\n            }\n        }\n\n        function previousStep(step) {\n            if (step === 2) {\n                document.getElementById('step2').classList.remove('active');\n                document.getElementById('step2').classList.add('disabled');\n                document.getElementById('step1').classList.remove('completed');\n                document.getElementById('step1').classList.add('active');\n                currentStep = 1;\n            } else if (step === 3) {\n                document.getElementById('step3').classList.remove('active');\n                document.getElementById('step3').classList.add('disabled');\n                document.getElementById('step2').classList.remove('completed');\n                document.getElementById('step2').classList.add('active');\n                currentStep = 2;\n            }\n        }\n\n        function selectProvider(provider) {\n            selectedProvider = provider;\n            document.querySelectorAll('.provider-option').forEach(option => {\n                option.classList.remove('selected');\n            });\n            event.currentTarget.classList.add('selected');\n            document.getElementById('step2-next').disabled = false;\n        }\n\n        function updatePreview() {\n            const preview = document.getElementById('previewContent');\n            preview.innerHTML = '<strong>Recipients:</strong> ' + smsData.recipients + '<br>' +\n                '<strong>Provider:</strong> ' + smsData.provider + '<br>' +\n                '<strong>Message:</strong><br>' + smsData.message;\n        }\n\n        async function sendSMS() {\n            const waiting = document.getElementById('waiting');\n            const sendButton = document.getElementById('sendButton');\n            waiting.style.display = 'block';\n            sendButton.disabled = true;\n\n            try {\n                const response = await fetch('/api/sms/send', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + authToken\n                    },\n                    body: JSON.stringify({\n                        recipients: smsData.recipients.split(','),\n                        message: smsData.message,\n                        provider: smsData.provider\n                    })\n                });\n\n                const result = await response.json();\n                waiting.style.display = 'none';\n\n                if (result.success) {\n                    showResult('step3-result', 'success',\n                        '‚úÖ SMS sent successfully!<br>' +\n                        'Workflow ID: ' + result.workflow_id + '<br>' +\n                        'Status: ' + result.status\n                    );\n                } else {\n                    showResult('step3-result', 'error', '‚ùå ' + result.error);\n                    sendButton.disabled = false;\n                }\n            } catch (error) {\n                waiting.style.display = 'none';\n                showResult('step3-result', 'error', '‚ùå ' + error.message);\n                sendButton.disabled = false;\n            }\n        }\n\n        function showResult(elementId, type, message) {\n            const element = document.getElementById(elementId);\n            element.className = 'result ' + type;\n            element.innerHTML = message;\n            element.style.display = 'block';\n        }\n\n        function logout() {\n            sessionStorage.removeItem('authToken');\n            sessionStorage.removeItem('user');\n            window.location.href = '/login';\n        }\n    </script>\n</body>\n</html>"
        },
        "home_page": {
            "id": "home_page",
            "name": "Home Page",
            "type": "html",
            "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{{.app_title}}</title>\n    <style>\n        body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }\n        .hero { text-align: center; padding: 40px 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 10px; margin-bottom: 30px; }\n        .features { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px; }\n        .feature { padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n        .cta { text-align: center; }\n        .btn { display: inline-block; padding: 12px 24px; background: #007bff; color: white; text-decoration: none; border-radius: 4px; margin: 10px; }\n        .btn:hover { background: #0056b3; }\n    </style>\n</head>\n<body>\n    <div class=\"hero\">\n        <h1>{{.app_title}}</h1>\n        <p>Complete SMS workflow application built entirely from JSON configuration</p>\n        <p><strong>Version:</strong> {{.version}} | <strong>Engine:</strong> JSON-Driven Workflow</p>\n    </div>\n\n    <div class=\"features\">\n        <div class=\"feature\">\n            <h3>üîß JSON-Driven</h3>\n            <p>Entire application defined in JSON - no hard-coded logic</p>\n        </div>\n        <div class=\"feature\">\n            <h3>üîÄ Dynamic Workflows</h3>\n            <p>Multi-step workflows with conditional logic and parallel execution</p>\n        </div>\n        <div class=\"feature\">\n            <h3>üé® Template Engine</h3>\n            <p>Dynamic HTML generation from JSON template definitions</p>\n        </div>\n        <div class=\"feature\">\n            <h3>üîí Authentication</h3>\n            <p>Built-in user management and role-based access control</p>\n        </div>\n        <div class=\"feature\">\n            <h3>üì± SMS Pipeline</h3>\n            <p>Complete SMS workflow with provider routing and delivery tracking</p>\n        </div>\n        <div class=\"feature\">\n            <h3>‚ö° Real-time</h3>\n            <p>Live status updates and webhook processing</p>\n        </div>\n    </div>\n\n    <div class=\"cta\">\n        <h2>Get Started</h2>\n        <a href=\"/login\" class=\"btn\">üîê Login to SMS Workflow</a>\n        <a href=\"/docs\" class=\"btn\">üìñ View Documentation</a>\n    </div>\n</body>\n</html>"
        },
        "docs_page": {
            "id": "docs_page",
            "name": "Documentation Page",
            "type": "html",
            "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{{.app_title}} - Documentation</title>\n    <style>\n        body { font-family: Arial, sans-serif; max-width: 1000px; margin: 0 auto; padding: 20px; line-height: 1.6; }\n        .header { text-align: center; margin-bottom: 40px; }\n        .section { margin-bottom: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }\n        code { background: #f4f4f4; padding: 2px 6px; border-radius: 3px; }\n        pre { background: #f4f4f4; padding: 15px; border-radius: 5px; overflow-x: auto; }\n        .endpoint { background: #e3f2fd; padding: 10px; margin: 10px 0; border-radius: 4px; }\n        .back-btn { display: inline-block; padding: 8px 16px; background: #6c757d; color: white; text-decoration: none; border-radius: 4px; }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>{{.app_title}} - API Documentation</h1>\n        <p>Complete JSON-driven workflow engine</p>\n        <a href=\"/\" class=\"back-btn\">‚Üê Back to Home</a>\n    </div>\n\n    <div class=\"section\">\n        <h2>üèóÔ∏è Architecture</h2>\n        <p>This application is built entirely from JSON configuration using a dynamic workflow engine that compiles JSON into:</p>\n        <ul>\n            <li><strong>Routes:</strong> HTTP endpoints with custom handlers</li>\n            <li><strong>Templates:</strong> Dynamic HTML pages with data binding</li>\n            <li><strong>Workflows:</strong> Multi-step business logic with nodes and edges</li>\n            <li><strong>Middleware:</strong> Authentication, logging, and custom processing</li>\n            <li><strong>Functions:</strong> Reusable code components</li>\n        </ul>\n    </div>\n\n    <div class=\"section\">\n        <h2>üîó API Endpoints</h2>\n        \n        <div class=\"endpoint\">\n            <strong>GET /</strong><br>\n            Home page with application overview\n        </div>\n        \n        <div class=\"endpoint\">\n            <strong>GET /login</strong><br>\n            User authentication page\n        </div>\n        \n        <div class=\"endpoint\">\n            <strong>POST /auth/login</strong><br>\n            Authenticate user credentials<br>\n            <code>Body: {\"username\": \"string\", \"password\": \"string\"}</code>\n        </div>\n        \n        <div class=\"endpoint\">\n            <strong>GET /sms</strong><br>\n            SMS workflow interface (requires authentication)\n        </div>\n        \n        <div class=\"endpoint\">\n            <strong>POST /api/sms/send</strong><br>\n            Execute SMS workflow<br>\n            <code>Headers: Authorization: Bearer [token]</code><br>\n            <code>Body: {\"recipients\": [\"string\"], \"message\": \"string\", \"provider\": \"string\"}</code>\n        </div>\n        \n        <div class=\"endpoint\">\n            <strong>GET /docs</strong><br>\n            This documentation page\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <h2>üîß JSON Configuration</h2>\n        <p>The entire application is defined in <code>sms-app.json</code>:</p>\n        <pre>{\n  \"app\": { \"name\": \"...\", \"port\": \"3000\" },\n  \"routes\": [ { \"method\": \"GET\", \"path\": \"/\", \"handler\": {...} } ],\n  \"templates\": { \"page_id\": { \"template\": \"HTML...\", \"data\": {...} } },\n  \"workflows\": [ { \"id\": \"sms_workflow\", \"nodes\": [...], \"edges\": [...] } ],\n  \"middleware\": [ { \"type\": \"auth\", \"config\": {...} } ],\n  \"functions\": { \"func_id\": { \"type\": \"http\", \"url\": \"...\" } }\n}</pre>\n    </div>\n\n    <div class=\"section\">\n        <h2>üë• Demo Users</h2>\n        <p>Use these credentials to test the application:</p>\n        <ul>\n            <li><strong>admin</strong> / password (Full access)</li>\n            <li><strong>manager</strong> / password (Write access)</li>\n            <li><strong>operator</strong> / password (Read access)</li>\n        </ul>\n    </div>\n\n    <div class=\"section\">\n        <h2>üöÄ Getting Started</h2>\n        <ol>\n            <li>Visit <a href=\"/login\">/login</a> to authenticate</li>\n            <li>Go to <a href=\"/sms\">/sms</a> to access the SMS workflow</li>\n            <li>Follow the 3-step process: Enter details ‚Üí Choose provider ‚Üí Send SMS</li>\n            <li>View real-time status updates and delivery confirmations</li>\n        </ol>\n    </div>\n</body>\n</html>"
        }
    },
    "functions": {
        "authenticate_user": {
            "id": "authenticate_user",
            "name": "User Authentication",
            "type": "expression",
            "code": "validate user credentials and return token",
            "parameters": {
                "username": "string",
                "password": "string"
            },
            "response": {
                "type": "json",
                "data": {
                    "success": true,
                    "token": "string",
                    "user": "object"
                }
            }
        },
        "send_sms": {
            "id": "send_sms",
            "name": "Send SMS via Provider",
            "type": "http",
            "url": "https://api.example-sms-provider.com/send",
            "method": "POST",
            "headers": {
                "Content-Type": "application/json",
                "Authorization": "Bearer SMS_API_KEY"
            },
            "body": "{\"to\": \"{{.recipients}}\", \"message\": \"{{.message}}\", \"provider\": \"{{.provider}}\"}",
            "response": {
                "type": "json"
            }
        },
        "validate_phone": {
            "id": "validate_phone",
            "name": "Validate Phone Number",
            "type": "expression",
            "code": "validate phone number format",
            "parameters": {
                "phone": "string"
            }
        }
    },
    "validators": {
        "sms_input": {
            "id": "sms_input",
            "name": "SMS Input Validator",
            "type": "required",
            "field": "message",
            "rules": [
                {
                    "type": "required",
                    "message": "Message is required"
                },
                {
                    "type": "length",
                    "value": { "min": 1, "max": 160 },
                    "message": "Message must be 1-160 characters"
                }
            ]
        },
        "phone_validator": {
            "id": "phone_validator",
            "name": "Phone Number Validator",
            "type": "regex",
            "field": "recipients",
            "rules": [
                {
                    "type": "pattern",
                    "value": "^\\+?[1-9]\\d{1,14}$",
                    "message": "Invalid phone number format"
                }
            ]
        }
    },
    "workflows": [
        {
            "id": "sms_workflow",
            "name": "SMS Sending Workflow",
            "description": "Complete SMS workflow with validation, routing, and delivery tracking",
            "version": "1.0.0",
            "nodes": [
                {
                    "id": "validate_input",
                    "name": "Validate SMS Input",
                    "type": "validator",
                    "description": "Validate SMS message and recipients",
                    "config": {
                        "validator": "sms_input"
                    }
                },
                {
                    "id": "validate_phones",
                    "name": "Validate Phone Numbers",
                    "type": "validator",
                    "description": "Validate phone number format",
                    "config": {
                        "validator": "phone_validator"
                    }
                },
                {
                    "id": "route_provider",
                    "name": "Route SMS Provider",
                    "type": "function",
                    "description": "Select optimal SMS provider",
                    "function": "route_provider_logic",
                    "config": {
                        "routing_rules": {
                            "bulk": "aws",
                            "premium": "twilio",
                            "standard": "nexmo"
                        }
                    }
                },
                {
                    "id": "send_sms",
                    "name": "Send SMS",
                    "type": "function",
                    "description": "Send SMS via selected provider",
                    "function": "send_sms"
                },
                {
                    "id": "log_result",
                    "name": "Log SMS Result",
                    "type": "function",
                    "description": "Log SMS sending result",
                    "config": {
                        "log_level": "info"
                    }
                }
            ],
            "edges": [
                {
                    "id": "input_to_phones",
                    "from": "validate_input",
                    "to": "validate_phones"
                },
                {
                    "id": "phones_to_route",
                    "from": "validate_phones",
                    "to": "route_provider"
                },
                {
                    "id": "route_to_send",
                    "from": "route_provider",
                    "to": "send_sms"
                },
                {
                    "id": "send_to_log",
                    "from": "send_sms",
                    "to": "log_result"
                }
            ],
            "variables": {
                "recipients": [ ],
                "message": "",
                "provider": "auto"
            },
            "options": {
                "async": false,
                "retry": {
                    "max_attempts": 3,
                    "delay": "5s",
                    "backoff_type": "exponential"
                }
            }
        }
    ],
    "routes": [
        {
            "id": "home",
            "method": "GET",
            "path": "/",
            "description": "Home page",
            "handler": {
                "type": "template",
                "target": "home_page"
            },
            "response": {
                "type": "html"
            }
        },
        {
            "id": "login_page",
            "method": "GET",
            "path": "/login",
            "description": "Login page",
            "handler": {
                "type": "template",
                "target": "login_page"
            },
            "response": {
                "type": "html"
            }
        },
        {
            "id": "auth_login",
            "method": "POST",
            "path": "/auth/login",
            "description": "User authentication endpoint",
            "handler": {
                "type": "function",
                "target": "authenticate_user"
            },
            "response": {
                "type": "json"
            }
        },
        {
            "id": "sms_page",
            "method": "GET",
            "path": "/sms",
            "description": "SMS workflow interface",
            "auth": {
                "required": false,
                "type": "session"
            },
            "handler": {
                "type": "template",
                "target": "sms_page"
            },
            "response": {
                "type": "html"
            }
        },
        {
            "id": "sms_send",
            "method": "POST",
            "path": "/api/sms/send",
            "description": "Execute SMS workflow",
            "auth": {
                "required": true,
                "type": "session"
            },
            "middleware": [ "auth" ],
            "handler": {
                "type": "workflow",
                "target": "sms_workflow"
            },
            "response": {
                "type": "json"
            }
        },
        {
            "id": "docs",
            "method": "GET",
            "path": "/docs",
            "description": "API documentation",
            "handler": {
                "type": "template",
                "target": "docs_page"
            },
            "response": {
                "type": "html"
            }
        }
    ]
}
